#Inventor V2.1 ascii

Separator {
    DEF Viewport_Layout SoXipViewportGroup {
	fields [ SFBool activateOnClick, MFVec4f viewports, SFInt32 current,  ]
	activateOnClick	FALSE
	viewports	[ 0 0 0.5 0.5,
			  0 0.5 0.5 0.5,
			  0.5 0.5 0.5 0.5,
			  0.5 0 0.5 0.5 ]
	current	1
	Separator {
	    Separator {
		Group {
		    DEF +0 SoXipMprPlane {
			fields [ SFMatrix plane, SFVec3f center, SFColor color, SFInt32 id,
				SFFloat stepSize ]
			plane	1 -6.50187e-008 2.92721e-008 0
				-2.9272e-008 1.04575e-006 1 0
				-6.50187e-008 -1 1.04575e-006 0
				0.5 0.5 0.5 1
			center	0.5 0.5 0.5 =
			    ComposeVec3f {
				x	0.5 =
				    DEF +1 DecomposeVec3f {
					vector	0.5 0.5 0.5 =
					    USE +0
					    . center

				    }
				    . x

				y	0.5 =
				    DecomposeVec3f {
					vector	0.5 0.5 0.5 =
					    DecomposeMatrix {
						matrix	1 -6.50187e-008 2.92721e-008 0
							-2.9272e-008 1.04575e-006 1 0
							-6.50187e-008 -1 1.04575e-006 0
							0.5 0.5 0.5 1 =
						    USE +0
						    . plane

					    }
					    . translation

				    }
				    . y

				z	0.5 =
				    USE +1
				    . z

			    }
			    . vector

			color	0 0 1
			id	2
			stepSize	0 =
			    DEF +2 Calculator {
				a	0 =
				    DEF +3 SoXipImageAttributes {
					inputs [ SoXipSFDataImage image ]
					image	"NULL" =
					    DEF +4 SoXipVolumeDicom {
						inputs [ SoXipMFDataDicom input ]
						input	[  ] =
						    DEF +5 SoXipSortDicom {
							inputs [ SoXipMFDataDicom input ]
							input	[  ] =
							    DEF LoadDicom SoXipLoadDicom {
								inputs [  ]
								outputs [ SoXipMFDataDicom dicom ]
							    }
							    . dicom

							outputs [ SoXipMFDataDicom output ]
						    }
						    . output

						outputs [ SoXipSFDataImage output ]
					    }
					    . output

					outputs [ SFMatrix modelMatrix, SFShort width, SFShort height, SFShort depth,
						SFShort bitsStored, SFMatrix defaultOrientation, SFShort orthoScanOrientation, SFMatrix orthoOrientation1,
						SFMatrix orthoOrientation2, SFMatrix orthoOrientation3, SFVec3f defaultCenter ]
				    }
				    . width

				b	0 =
				    USE +3
				    . height

				c	0 =
				    USE +3
				    . depth

				d	0.5 =
				    DEF +6 DecomposeVec3f {
					vector	0.5 0.5 0.5 =
					    DecomposeMatrix {
						matrix	1 0 0 0
							0 -1 -8.74228e-008 0
							0 8.74228e-008 -1 0
							0.5 0.5 0.5 1 =
						    DEF Axial_Plane+7 SoXipMprPlane {
							fields [ SFMatrix plane, SFVec3f center, SFColor color, SFFloat stepSize ]
							plane	1 0 0 0
								0 -1 -8.74228e-008 0
								0 8.74228e-008 -1 0
								0.5 0.5 0.5 1 =
							    DEF Matrix_Import SelectOne {
								type	"MFMatrix"
								index	-1
								input	[ 1 0 0 0
											0 1 0 0
											0 0 1 0
											0 0 0 1,
										  1 0 0 0
											0 1 0 0
											0 0 1 0
											0 0 0 1,
										  1 0 0 0
											0 1 0 0
											0 0 1 0
											0 0 0 1,
										  1 0 0 0
											0 -1 2.53518e-006 0
											0 -2.53518e-006 -1 0
											0.5 0.5 0 1,
										  1 0 0 0
											0 -1 2.53518e-006 0
											0 -2.53518e-006 -1 0
											0.5 0.5 0 1 ] =
								    Concatenate {
									type	"MFMatrix"
									input0	1 0 0 0
										0 1 0 0
										0 0 1 0
										0 0 0 1 =
									    DEF RECIST_Import+8 SoNormalizeImagePt {
										inputs [ SoXipMFDataDicom refInput,  ]
										refInput	[  ] =
										    USE +5
										    . output

										outputs [ MFVec3f coordinates, SFMatrix plane, SFBool status ]
									    }
									    . plane

									input1	1 0 0 0
										0 1 0 0
										0 0 1 0
										0 0 0 1 =
									    DEF WHO_Import+9 SoNormalizeImagePt {
										inputs [ SoXipMFDataDicom refInput,  ]
										refInput	[  ] =
										    USE +5
										    . output

										outputs [ MFVec3f coordinates, SFMatrix plane, SFBool status ]
									    }
									    . plane

									input2	1 0 0 0
										0 1 0 0
										0 0 1 0
										0 0 0 1 =
									    DEF QIBA_Image SoNormalizeImagePt {
										inputs [ SoXipMFDataDicom refInput,  ]
										refInput	[  ] =
										    USE +5
										    . output

										outputs [ MFVec3f coordinates, SFMatrix plane, SFBool status ]
									    }
									    . plane

									input3	1 0 0 0
										0 -1 2.53518e-006 0
										0 -2.53518e-006 -1 0
										0.5 0.5 0 1 =
									    DEF RECIST_Plane ComposeMatrix {
										translation	0.5 0.5 0 =
										    ComposeVec3f {
											x	0.5
											y	0.5
											z	0 =
											    DecomposeVec3f {
												vector	0 0 0 =
												    SelectOne {
													type	"MFVec3f"
													index	0
													input	[ 0 0 0,
															  0 0 0 ] =
													    DEF RECIST+10 SoDrawLine {
														fields [ SFFloat lineWidth, MFVec3f points ]
														lineWidth	1.5
														points	[ 0 0 0,
																  0 0 0 ] =
														    USE RECIST_Import+8
														    . coordinates

													    }
													    . points

												    }
												    . output

											    }
											    . z

										    }
										    . vector

										rotation	1 0 0  3.14159
									    }
									    . matrix

									input4	1 0 0 0
										0 -1 2.53518e-006 0
										0 -2.53518e-006 -1 0
										0.5 0.5 0 1 =
									    DEF WHO_Plane ComposeMatrix {
										translation	0.5 0.5 0 =
										    ComposeVec3f {
											x	0.5
											y	0.5
											z	0 =
											    DecomposeVec3f {
												vector	0 0 0 =
												    SelectOne {
													type	"MFVec3f"
													index	0
													input	[ 0 0 0,
															  0 0 0,
															  0 0 0,
															  0 0 0 ] =
													    DEF WHO+11 SoBiorthogonalLine {
														fields [ SFFloat lineWidth, MFVec3f points ]
														lineWidth	1.5
														points	[ 0 0 0,
																  0 0 0,
																  0 0 0,
																  0 0 0 ] =
														    USE WHO_Import+9
														    . coordinates

													    }
													    . points

												    }
												    . output

											    }
											    . z

										    }
										    . vector

										rotation	1 0 0  3.14159
									    }
									    . matrix

								    }
								    . output

							    }
							    . output

							center	0.5 0.5 0.5 =
							    ComposeVec3f {
								x	0.5 =
								    DEF +12 DecomposeVec3f {
									vector	0.5 0.5 0.5 =
									    USE Axial_Plane+7
									    . center

								    }
								    . x

								y	0.5 =
								    USE +12
								    . y

								z	0.5 =
								    USE +6
								    . z

							    }
							    . vector

							color	1 0 0
							stepSize	0 =
							    USE +2
							    . oc

						    }
						    . plane

					    }
					    . translation

				    }
				    . z

				expression	"oa = 1.0 / a; ob = 1.0 / b; oc = 1.0 / c; od = c * (1.0 - d) + 1;"
			    }
			    . oa

		    }
		    DEF +13 SoXipMprPlane {
			fields [ SFMatrix plane, SFVec3f center, SFColor color, SFInt32 id,
				SFFloat stepSize ]
			plane	1.78814e-007 1 8.9407e-008 0
				2.98023e-008 -5.96047e-008 1 0
				1 -1.49012e-007 -1.42109e-014 0
				0.5 0.5 0.5 1
			center	0.5 0.5 0.5 =
			    ComposeVec3f {
				x	0.5 =
				    DecomposeVec3f {
					vector	0.5 0.5 0.5 =
					    DecomposeMatrix {
						matrix	1.78814e-007 1 8.9407e-008 0
							2.98023e-008 -5.96047e-008 1 0
							1 -1.49012e-007 -1.42109e-014 0
							0.5 0.5 0.5 1 =
						    USE +13
						    . plane

					    }
					    . translation

				    }
				    . x

				y	0.5 =
				    DEF +14 DecomposeVec3f {
					vector	0.5 0.5 0.5 =
					    USE +13
					    . center

				    }
				    . y

				z	0.5 =
				    USE +14
				    . z

			    }
			    . vector

			color	0 1 0
			id	1
			stepSize	0 =
			    USE +2
			    . ob

		    }
		    USE Axial_Plane+7
		}
		DEF Examiner_Axial SoXipMprExaminer {
		    intersection	INTERSECTION
		    border	TRUE
		    dogEar	TRUE
		    orientationCube	TRUE
		    camera			    OrthographicCamera {
			position	0.5 0.5 0.539128
			orientation	1 -1.8521e-008 -3.69976e-010  3.14159
			nearDistance	-0.5
			farDistance	0.5
			focalDistance	0
			height	1
		    }

		    complexity			    Complexity {
			value	0.5
			textureQuality	0.5
		    }

		    intersectionManip			    SoXipMprIntersectionManip {
			fields [ SFBool on, SFEnum mode,  ]
			on	TRUE
			mode	INTERSECTION
		    }

		    borderNode			    DEF +15 SoXipViewportBorder {
			fields [ SFColor activeColor, SFColor inactiveColor,  ]
			activeColor	1 0 0
			inactiveColor	1 0 0
		    }

		    dogEarNode			    DEF +16 SoXipDogEar {
			fields [  ]
		    }

		    orientationNode			    DEF +17 SoXipOrientationCube {
			fields [  ]
		    }

		    borderSwitch			    Switch {
			whichChild	0
			USE +15
		    }

		    dogEarSwitch			    Switch {
			whichChild	0
			USE +16
		    }

		    orientationSwitch			    Switch {
			whichChild	0
			USE +17
		    }

		}
		DEF +18 Group {
		    DEF Dicom_WL+19 SoXipWindowLevelManip {
			fields [ SFFloat window, SFFloat level, SFEnum mouse, SFBool handleComplexity ]
			window	1 =
			    DEF Window_Gate Gate {
				type	"MFFloat"
				input	1 =
				    DEF Dicom_Window SelectOne {
					type	"MFFloat"
					index	0
					input	[ 1, 1500 ] =
					    DEF Window Concatenate {
						type	"MFFloat"
						input0	1 =
						    DEF +20 SoXipDicomWindowLevel {
							inputs [ SoXipSFDataDicom input ]
							input	"NULL" =
							    USE +5
							    . output

							outputs [ SFFloat window, SFFloat level, SFShort bitsStored ]
						    }
						    . window

						input1	1500 =
						    DEF Win_Level+21 Calculator {
							a	0 =
							    USE +20
							    . bitsStored

							b	0 =
							    DEF +22 SoIAParseString {
								inputs [ SFString string,  ]
								string	"" =
								    DEF Intercept SoXipGetDicomString {
									inputs [ SoXipMFDataDicom dicom, SFUShort group, SFUShort element,  ]
									dicom	"NULL" =
									    DEF +23 SoXipDecomposeMFDicom {
										inputs [ SoXipMFDataDicom input, SFShort index ]
										input	[  ] =
										    USE +5
										    . output

										index	0
										outputs [ SoXipSFDataDicom output ]
									    }
									    . output

									group	0x28
									element	0x1052
									outputs [ MFString string ]
								    }
								    . string

								outputs [ SFFloat output ]
							    }
							    . output

							c	1
							d	1500
							e	-600
							f	1 =
							    DEF +24 SoXipLut {
								fields [ SFEnum inputMode, SFEnum alphaMode, SFShort bitsUsed, SFFloat rampWidth,
									SFFloat rampCenter, SFFloat slopeCenter, SFInt32 fileEntries, MFColor arrayColor,
									MFFloat arrayAlpha ]
								inputMode	TRAPEZOID
								alphaMode	CONSTANT
								bitsUsed	0 =
								    USE +20
								    . bitsStored

								rampWidth	1 =
								    USE Dicom_WL+19
								    . window

								rampCenter	0.5 =
								    USE Dicom_WL+19
								    . level

								slopeCenter	0.9
								fileEntries	4096
								arrayColor	[  ]
								arrayAlpha	[  ]
							    }
							    . rampWidth

							g	0.5 =
							    USE +24
							    . rampCenter

							expression	"oa=d/(pow(2.0, a));ob=((e-b)/c)/(pow(2.0, a)); oc=f*(pow(2.0, a));od=b+g*c*(pow(2.0, a))"
						    }
						    . oa

					    }
					    . output

				    }
				    . output

			    }
			    . output

			level	0.5 =
			    DEF Level_Gate Gate {
				type	"MFFloat"
				input	0.5 =
				    DEF Dicom_Level SelectOne {
					type	"MFFloat"
					index	0
					input	[ 0.5, -600 ] =
					    DEF Level Concatenate {
						type	"MFFloat"
						input0	0.5 =
						    USE +20
						    . level

						input1	-600 =
						    USE Win_Level+21
						    . ob

					    }
					    . output

				    }
				    . output

			    }
			    . output

			mouse	BUTTON3
			handleComplexity	TRUE
		    }
		    USE +24
		}
		SoXipCPUMprRender {
		    fields [ SoXipSFDataImage volume, SFBool blendOn ]
		    volume	"NULL" =
			USE +4
			. output

		    blendOn	TRUE
		}
		SoXipLutColorBar {
		    fields [ SFEnum position, SFVec2f origin, SFVec2f size, SFColor borderColor,
			    SFString bottomLabel, SFString topLabel ]
		    position	LEFT
		    origin	0.02 0.3
		    size	0.03 0.3
		    bottomLabel	"0"
		    topLabel	"4095"
		}
		Group {
		    DEF OverlayStyle_Axial SoXipOverlayDrawStyle {
			fields [ MFString label, SFFloat lineWidth,  ]
			label	"roi"
			lineWidth	1
		    }
		    DEF OverlayClr_Axial SoXipOverlayColor {
			fields [ MFString label, SFColor color, SFFloat transparency ]
			label	"roi"
			color	0.3 0.8 1
			transparency	0.1
		    }
		    DEF Mask_Axial+25 SoMaskContour {
			fields [ MFString shapeLabel, SoXipSFDataImage volMask, SFMatrix refModelMatrix, SFInt32 refWidth,
				SFInt32 refHeight, SFInt32 refDepth, SFMatrix plane, MFVec3f concavePoints,
				 ]
			shapeLabel	"roi"
			volMask	"NULL" =
			    DEF Mask_Switch+26 SoXipSwitchMFDataImage {
				inputs [ SoXipMFDataImage image1, SoXipMFDataImage image2, SoXipMFDataImage image3, SFShort index ]
				image1	"NULL" =
				    SoItkImageToXipMask {
					inputs [ SFMatrix modelMatrix, SoItkSFDataImage input ]
					modelMatrix	1 0 0 0
						0 1 0 0
						0 0 1 0
						0 0 0 1 =
					    SoXipImageAttributes {
						inputs [ SoXipSFDataImage image ]
						image	 =
						    DEF Segment+27 SoROIVolume {
							inputs [ SoXipSFDataImage volumeImageData, MFVec3f seeds,  ]
							volumeImageData	"NULL" =
							    USE +4
							    . output

							seeds	[ 0 0 0,
									  0 0 0 ] =
							    DEF Seed+28 SoDrawLine {
								fields [ MFVec3f points ]
								points	[ 0 0 0,
										  0 0 0 ]
							    }
							    . points

							outputs [ SoXipSFDataImage roiVolume, SoItkSFDataImage roiITKVolume, MFInt32 roiRegion, MFInt32 roiSize,
								MFInt32 roiOrigin, MFVec3f seedPoints ]
						    }
						    . roiVolume

						outputs [ SFMatrix modelMatrix, SFShort width, SFShort height, SFShort depth,
							SFShort bitsStored, SFMatrix defaultOrientation, SFShort orthoScanOrientation, SFMatrix orthoOrientation1,
							SFMatrix orthoOrientation2, SFMatrix orthoOrientation3, SFVec3f defaultCenter ]
					    }
					    . modelMatrix

					input	"NULL" =
					    SoIABinaryDilate {
						inputs [ SoItkSFDataImage Input1, SFShort Radius,  ]
						Input1	"NULL" =
						    SoIABinaryDilate {
							inputs [ SoItkSFDataImage Input1, SFShort Radius, SFShort DilateValue ]
							Input1	"NULL" =
							    SoIAPostprocess {
								inputs [ SoItkSFDataImage Input1, SFShort Shrink ]
								Input1	"DATA" =
								    SoItkBinaryThresholdImageFilter {
									inputs [ SoItkSFDataImage Input0, SFFloat UpperThreshold, SFFloat InsideValue,  ]
									Input0	"DATA" =
									    SoItkFastMarchingImageFilter {
										inputs [ SoItkSFDataImage Input0, SFShort Dimension, MFInt32 OutputRegion, MFFloat OutputOrigin,
											SoItkSFNodeContainer TrialPoints, MFInt32 OutputSize, SFFloat StoppingValue,  ]
										Input0	"NULL" =
										    SoItkSigmoidImageFilter {
											inputs [ SoItkSFDataImage Input0, SFFloat Beta, SFFloat OutputMaximum, SFFloat Alpha ]
											Input0	"NULL" =
											    SoItkGradientMagnitudeRecursiveGaussianImageFilter {
												inputs [ SoItkSFDataImage Input0, SFFloat Sigma,  ]
												Input0	"NULL" =
												    SoIAPreprocess {
													inputs [ SoItkSFDataImage Input1, SFShort Extention ]
													Input1	"NULL" =
													    SoItkCurvatureAnisotropicDiffusionImageFilter {
														inputs [ SoItkSFDataImage Input0, SFFloat NumberOfIterations, SFFloat TimeStep, SFFloat ConductanceParameter ]
														Input0	"NULL" =
														    SoItkCastImageFilter {
															inputs [ SoItkSFDataImage Input0,  ]
															Input0	 =
															    USE Segment+27
															    . roiITKVolume

															outputs [ SoItkSFDataImage Output ]
														    }
														    . Output

														NumberOfIterations	5
														TimeStep	0.0625
														ConductanceParameter	3
														outputs [ SoItkSFDataImage Output ]
													    }
													    . Output

													Extention	1 =
													    DEF +29 Calculator {
														a	0 =
														    SoIAParseString {
															inputs [ SFString string,  ]
															string	"" =
															    DEF Slice_Thickness SoXipGetDicomString {
																inputs [ SoXipMFDataDicom dicom, SFUShort group, SFUShort element,  ]
																dicom	"NULL" =
																    USE +23
																    . output

																group	0x18
																element	0x50
																outputs [ MFString string ]
															    }
															    . string

															outputs [ SFFloat output ]
														    }
														    . output

														expression	"oa = a<1 ? 1 : a"
													    }
													    . oa

													outputs [ SoItkSFDataImage Output ]
												    }
												    . Output

												Sigma	0.5
												outputs [ SoItkSFDataImage Output ]
											    }
											    . Output

											Beta	18
											OutputMaximum	1
											Alpha	-8
											outputs [ SoItkSFDataImage Output ]
										    }
										    . Output

										Dimension	3
										OutputRegion	[ 0, 0, 0, 0, 0, 0 ] =
										    USE Segment+27
										    . roiRegion

										OutputOrigin	[ 0, 0, 0 ]
										TrialPoints	0 =
										    SoItkNodeContainer {
											inputs [ MFVec3f Seeds, MFFloat Labels ]
											Seeds	[  ] =
											    USE Segment+27
											    . seedPoints

											Labels	[  ]
											outputs [ SoItkSFNodeContainer NodeContainer ]
										    }
										    . NodeContainer

										OutputSize	[ 0, 0, 0 ] =
										    USE Segment+27
										    . roiSize

										StoppingValue	50
										outputs [ SoItkSFDataImage Output ]
									    }
									    . Output

									UpperThreshold	100
									InsideValue	255
									outputs [ SoItkSFDataImage Output ]
								    }
								    . Output

								Shrink	1 =
								    USE +29
								    . oa

								outputs [ SoItkSFDataImage Output ]
							    }
							    . Output

							Radius	5
							DilateValue	255
							outputs [ SoItkSFDataImage Output ]
						    }
						    . Output

						Radius	3
						outputs [ SoItkSFDataImage Output ]
					    }
					    . Output

					outputs [ SoXipSFDataImage output ]
				    }
				    . output

				image2	"NULL" =
				    DEF Import SoIALoadDcmSegObject {
					inputs [  ]
					outputs [ SoXipSFDataImage inputVolume ]
				    }
				    . inputVolume

				image3	"NULL" =
				    DEF QIBA_Mask SoContourVoxelizer {
					inputs [ MFVec3f point, MFInt32 coordIndex, SFEnum maskType, SFShort width,
						SFShort height, SFShort depth, SFMatrix modelMatrix,  ]
					point	[  ] =
					    DEF QIBA_Contour+30 SoNormalizeContour {
						inputs [ SFVec3f voxelPosition, MFVec3f voxelDirection, SFVec3f voxelSpacing,  ]
						voxelPosition	0 0 0 =
						    DEF QIBA_UID+31 SoGetImageInfor {
							inputs [ SoXipMFDataDicom refInput,  ]
							refInput	[  ] =
							    USE +5
							    . output

							outputs [ SFVec3f imagePosition, SFVec3f imageSpacing ]
						    }
						    . imagePosition

						voxelDirection	[ 1 0 0,
								  0 1 0 ]
						voxelSpacing	0 0 0 =
						    USE QIBA_UID+31
						    . imageSpacing

						outputs [ SFMatrix modelMatrix, SFInt32 maskWidth, SFInt32 maskHeight, SFInt32 maskDepth,
							MFVec3f pointList, MFInt32 pointIndex ]
					    }
					    . pointList

					coordIndex	[  ] =
					    USE QIBA_Contour+30
					    . pointIndex

					maskType	BYTE_MASK
					width	0 =
					    USE QIBA_Contour+30
					    . maskWidth

					height	0 =
					    USE QIBA_Contour+30
					    . maskHeight

					depth	0 =
					    USE QIBA_Contour+30
					    . maskDepth

					modelMatrix	1 0 0 0
						0 1 0 0
						0 0 1 0
						0 0 0 1 =
					    USE QIBA_Contour+30
					    . modelMatrix

					outputs [ SoXipSFDataImage mask ]
				    }
				    . mask

				index	0
				outputs [ SoXipMFDataImage image ]
			    }
			    . image

			refModelMatrix	1 0 0 0
				0 1 0 0
				0 0 1 0
				0 0 0 1 =
			    USE +3
			    . modelMatrix

			refWidth	0 =
			    USE +3
			    . width

			refHeight	0 =
			    USE +3
			    . height

			refDepth	0 =
			    USE +3
			    . depth

			plane	1 0 0 0
				0 -1 -8.74228e-008 0
				0 8.74228e-008 -1 0
				0.5 0.5 0.5 1 =
			    USE Axial_Plane+7
			    . plane

			concavePoints	[  ] =
			    DEF Punch_Axial+32 SoMaskEditManip {
				fields [ SFBool on, MFVec3f points ]
				on	FALSE
				points	[  ]
			    }
			    . points

		    }
		    USE Punch_Axial+32
		    DEF Seed_Switch Switch {
			USE Seed+28
		    }
		}
		DEF RECIST_Switch Switch {
		    Separator {
			USE RECIST+10
			Translation {
			    translation	0.02 -0.02 0 =
				DEF +33 Calculator {
				    a	1 =
					DEF +34 DecomposeVec3f {
					    vector	1 1 1 =
						SelectOne {
						    type	"MFVec3f"
						    index	0
						    input	1 1 1 =
							DecomposeMatrix {
							    matrix	1 0 0 0
								    0 1 0 0
								    0 0 1 0
								    0 0 0 1 =
								USE +3
								. modelMatrix

							}
							. scaleFactor

						}
						. output

					}
					. x

				    A	0 0 0 =
					SelectOne {
					    type	"MFVec3f"
					    index	0
					    input	[ 0 0 0,
							      0 0 0 ] =
						USE RECIST+10
						. points

					}
					. output

				    B	0 0 0 =
					SelectOne {
					    type	"MFVec3f"
					    index	1
					    input	[ 0 0 0,
							      0 0 0 ] =
						USE RECIST+10
						. points

					}
					. output

				    C	0.02 -0.02 0
				    expression	"oa=length(A-B) * a; oA = (A+B)/2 + C"
				}
				. oA

			}
			DEF +35 FontStyle {
			    size	15
			}
			DEF RECIST_Value SoXipText2 {
			    fields [ SFString string,  ]
			    string	"0 mm" =
				SoXipStringConcatenate {
				    inputs [ SFString separator, MFString input0, MFString input1, MFString input2,
					    MFString input3, MFString input4, MFString input5, MFString input6,
					    MFString input7, MFString input8, MFString input9 ]
				    separator	" "
				    input0	"0" =
					DEF RECIST_inMM Concatenate {
					    type	"MFInt32"
					    input0	0 =
						USE +33
						. oa

					}
					. output

				    input1	"mm"
				    input2	[  ]
				    input3	[  ]
				    input4	[  ]
				    input5	[  ]
				    input6	[  ]
				    input7	[  ]
				    input8	[  ]
				    input9	[  ]
				    outputs [ SFString output ]
				}
				. output

			}
		    }
		}
		DEF WHO_Switch Switch {
		    Separator {
			USE WHO+11
			Translation {
			    translation	0.02 -0.02 0 =
				DEF +36 Calculator {
				    a	1 =
					USE +34
					. x

				    A	0 0 0 =
					SelectOne {
					    type	"MFVec3f"
					    input	[ 0 0 0,
							      0 0 0,
							      0 0 0,
							      0 0 0 ] =
						USE WHO+11
						. points

					}
					. output

				    B	0 0 0 =
					SelectOne {
					    type	"MFVec3f"
					    index	1
					    input	[ 0 0 0,
							      0 0 0,
							      0 0 0,
							      0 0 0 ] =
						USE WHO+11
						. points

					}
					. output

				    C	0 0 0 =
					SelectOne {
					    type	"MFVec3f"
					    index	2
					    input	[ 0 0 0,
							      0 0 0,
							      0 0 0,
							      0 0 0 ] =
						USE WHO+11
						. points

					}
					. output

				    D	0 0 0 =
					SelectOne {
					    type	"MFVec3f"
					    index	3
					    input	[ 0 0 0,
							      0 0 0,
							      0 0 0,
							      0 0 0 ] =
						USE WHO+11
						. points

					}
					. output

				    E	0.02 -0.02 0
				    expression	"oa = length(A-B)*a; ob = length(C-D)*a; oA = A+E"
				}
				. oA

			}
			USE +35
			DEF WHO_Value SoXipText2 {
			    fields [ SFString string,  ]
			    string	"LD =  0  mm;  SD =  0  mm" =
				SoXipStringConcatenate {
				    inputs [ SFString separator, MFString input0, MFString input1, MFString input2,
					    MFString input3, MFString input4, MFString input5, MFString input6,
					    MFString input7, MFString input8, MFString input9 ]
				    separator	"  "
				    input0	"LD ="
				    input1	"0" =
					DEF +37 Calculator {
					    a	0 =
						DEF WHO_oa Concatenate {
						    type	"MFInt32"
						    input0	0 =
							USE +36
							. oa

						}
						. output

					    b	0 =
						DEF WHO_ob Concatenate {
						    type	"MFInt32"
						    input0	0 =
							USE +36
							. ob

						}
						. output

					    expression	"oa = a>=b ? a : b; ob = a<=b ? a : b; oc = a * b;"
					}
					. oa

				    input2	"mm;"
				    input3	"SD ="
				    input4	"0" =
					USE +37
					. ob

				    input5	"mm"
				    input6	[  ]
				    input7	[  ]
				    input8	[  ]
				    input9	[  ]
				    outputs [ SFString output ]
				}
				. output

			}
		    }
		}
	    }
	    DEF +38 Group {
		DEF +39 Separator {
		    Translation {
			translation	-0.95 0.95 0
		    }
		    SoXipText2 {
			fields [ SFString string,  ]
			string	"SU " =
			    SoXipStringConcatenate {
				inputs [ SFString separator, MFString input0, MFString input1, MFString input2,
					MFString input3, MFString input4, MFString input5, MFString input6,
					MFString input7, MFString input8, MFString input9 ]
				separator	" "
				input0	"SU"
				input1	"" =
				    SoXipGetDicomString {
					inputs [ SoXipMFDataDicom dicom, SFUShort group, SFUShort element,  ]
					dicom	"NULL" =
					    USE +23
					    . output

					group	0x10
					element	0x20
					outputs [ MFString string ]
				    }
				    . string

				input2	[  ]
				input3	[  ]
				input4	[  ]
				input5	[  ]
				input6	[  ]
				input7	[  ]
				input8	[  ]
				input9	[  ]
				outputs [ SFString output ]
			    }
			    . output

		    }
		    Translation {
			translation	0 -0.05 0
		    }
		    SoXipText2 {
			fields [ SFString string,  ]
			string	"ST " =
			    SoXipStringConcatenate {
				inputs [ SFString separator, MFString input0, MFString input1, MFString input2,
					MFString input3, MFString input4, MFString input5, MFString input6,
					MFString input7, MFString input8, MFString input9 ]
				separator	" "
				input0	"ST"
				input1	"" =
				    SoXipGetDicomString {
					inputs [ SoXipMFDataDicom dicom, SFUShort group, SFUShort element,  ]
					dicom	"NULL" =
					    USE +23
					    . output

					group	0x8
					element	0x20
					outputs [ MFString string ]
				    }
				    . string

				input2	[  ]
				input3	[  ]
				input4	[  ]
				input5	[  ]
				input6	[  ]
				input7	[  ]
				input8	[  ]
				input9	[  ]
				outputs [ SFString output ]
			    }
			    . output

		    }
		}
		Separator {
		    Translation {
			translation	-0.95 -0.55 0
		    }
		    SoXipText2 {
			fields [ SFString string,  ]
			string	" mAs" =
			    SoXipStringConcatenate {
				inputs [ SFString separator, MFString input0, MFString input1, MFString input2,
					MFString input3, MFString input4, MFString input5, MFString input6,
					MFString input7, MFString input8, MFString input9 ]
				separator	" "
				input0	"" =
				    DEF Exposure SoXipGetDicomString {
					inputs [ SoXipMFDataDicom dicom, SFUShort group, SFUShort element,  ]
					dicom	"NULL" =
					    USE +23
					    . output

					group	0x18
					element	0x1152
					outputs [ MFString string ]
				    }
				    . string

				input1	"mAs"
				input2	[  ]
				input3	[  ]
				input4	[  ]
				input5	[  ]
				input6	[  ]
				input7	[  ]
				input8	[  ]
				input9	[  ]
				outputs [ SFString output ]
			    }
			    . output

		    }
		    Translation {
			translation	0 -0.05 0
		    }
		    SoXipText2 {
			fields [ SFString string,  ]
			string	" kVP" =
			    SoXipStringConcatenate {
				inputs [ SFString separator, MFString input0, MFString input1, MFString input2,
					MFString input3, MFString input4, MFString input5, MFString input6,
					MFString input7, MFString input8, MFString input9 ]
				separator	" "
				input0	"" =
				    DEF KVP SoXipGetDicomString {
					inputs [ SoXipMFDataDicom dicom, SFUShort group, SFUShort element,  ]
					dicom	"NULL" =
					    USE +23
					    . output

					group	0x18
					element	0x60
					outputs [ MFString string ]
				    }
				    . string

				input1	"kVP"
				input2	[  ]
				input3	[  ]
				input4	[  ]
				input5	[  ]
				input6	[  ]
				input7	[  ]
				input8	[  ]
				input9	[  ]
				outputs [ SFString output ]
			    }
			    . output

		    }
		    Translation {
			translation	0 -0.05 0
		    }
		    SoXipText2 {
			fields [ SFString string,  ]
			string	"FV  mm" =
			    SoXipStringConcatenate {
				inputs [ SFString separator, MFString input0, MFString input1, MFString input2,
					MFString input3, MFString input4, MFString input5, MFString input6,
					MFString input7, MFString input8, MFString input9 ]
				separator	" "
				input0	"FV"
				input1	"" =
				    DEF FOV SoXipGetDicomString {
					inputs [ SoXipMFDataDicom dicom, SFUShort group, SFUShort element,  ]
					dicom	"NULL" =
					    USE +23
					    . output

					group	0x18
					element	0x90
					outputs [ MFString string ]
				    }
				    . string

				input2	"mm"
				input3	[  ]
				input4	[  ]
				input5	[  ]
				input6	[  ]
				input7	[  ]
				input8	[  ]
				input9	[  ]
				outputs [ SFString output ]
			    }
			    . output

		    }
		    Translation {
			translation	0 -0.05 0
		    }
		    SoXipText2 {
			fields [ SFString string,  ]
			string	"SP  mm" =
			    SoXipStringConcatenate {
				inputs [ SFString separator, MFString input0, MFString input1, MFString input2,
					MFString input3, MFString input4, MFString input5, MFString input6,
					MFString input7, MFString input8, MFString input9 ]
				separator	" "
				input0	"SP"
				input1	"" =
				    DEF PixelSpacing SoXipGetDicomString {
					inputs [ SoXipMFDataDicom dicom, SFUShort group, SFUShort element,  ]
					dicom	"NULL" =
					    USE +23
					    . output

					group	0x28
					element	0x30
					outputs [ MFString string ]
				    }
				    . string

				input2	"mm"
				input3	[  ]
				input4	[  ]
				input5	[  ]
				input6	[  ]
				input7	[  ]
				input8	[  ]
				input9	[  ]
				outputs [ SFString output ]
			    }
			    . output

		    }
		    Translation {
			translation	0 -0.05 0
		    }
		    SoXipText2 {
			fields [ SFString string,  ]
			string	"ST  mm" =
			    SoXipStringConcatenate {
				inputs [ SFString separator, MFString input0, MFString input1, MFString input2,
					MFString input3, MFString input4, MFString input5, MFString input6,
					MFString input7, MFString input8, MFString input9 ]
				separator	" "
				input0	"ST"
				input1	"" =
				    DEF SliceThickness SoXipGetDicomString {
					inputs [ SoXipMFDataDicom dicom, SFUShort group, SFUShort element,  ]
					dicom	"NULL" =
					    USE +23
					    . output

					group	0x18
					element	0x50
					outputs [ MFString string ]
				    }
				    . string

				input2	"mm"
				input3	[  ]
				input4	[  ]
				input5	[  ]
				input6	[  ]
				input7	[  ]
				input8	[  ]
				input9	[  ]
				outputs [ SFString output ]
			    }
			    . output

		    }
		}
		Separator {
		    Translation {
			translation	0.5 0.95 0
		    }
		    SoXipText2 {
			fields [ SFString string,  ]
			string	"" =
			    SoXipGetDicomString {
				inputs [ SoXipMFDataDicom dicom, SFUShort group, SFUShort element,  ]
				dicom	"NULL" =
				    USE +23
				    . output

				group	0x8
				element	0x70
				outputs [ MFString string ]
			    }
			    . string

		    }
		    Translation {
			translation	0 -0.05 0
		    }
		    SoXipText2 {
			fields [ SFString string,  ]
			string	"" =
			    SoXipGetDicomString {
				inputs [ SoXipMFDataDicom dicom, SFUShort group, SFUShort element,  ]
				dicom	"NULL" =
				    USE +23
				    . output

				group	0x8
				element	0x1090
				outputs [ MFString string ]
			    }
			    . string

		    }
		    Translation {
			translation	0 -0.05 0
		    }
		    SoXipText2 {
			fields [ SFString string,  ]
			string	"" =
			    SoXipGetDicomString {
				inputs [ SoXipMFDataDicom dicom, SFUShort group, SFUShort element,  ]
				dicom	"NULL" =
				    USE +23
				    . output

				group	0x8
				element	0x60
				outputs [ MFString string ]
			    }
			    . string

		    }
		}
		Separator {
		    Translation {
			translation	0.5 -0.7 0
		    }
		    DEF Image_Window SoXipText2 {
			fields [ SFString string,  ]
			string	"W 1" =
			    SoXipStringConcatenate {
				inputs [ SFString separator, MFString input0, MFString input1, MFString input2,
					MFString input3, MFString input4, MFString input5, MFString input6,
					MFString input7, MFString input8, MFString input9 ]
				separator	" "
				input0	"W"
				input1	"1" =
				    SelectOne {
					type	"MFShort"
					index	0
					input	[ 1, 0 ] =
					    DEF +40 Concatenate {
						type	"MFShort"
						input0	1 =
						    USE Win_Level+21
						    . oc

						input1	0 =
						    USE Win_Level+21
						    . od

					    }
					    . output

				    }
				    . output

				input2	[  ]
				input3	[  ]
				input4	[  ]
				input5	[  ]
				input6	[  ]
				input7	[  ]
				input8	[  ]
				input9	[  ]
				outputs [ SFString output ]
			    }
			    . output

		    }
		    Translation {
			translation	0 -0.05 0
		    }
		    DEF Image_Level SoXipText2 {
			fields [ SFString string,  ]
			string	"L   0" =
			    SoXipStringConcatenate {
				inputs [ SFString separator, MFString input0, MFString input1, MFString input2,
					MFString input3, MFString input4, MFString input5, MFString input6,
					MFString input7, MFString input8, MFString input9 ]
				separator	" "
				input0	"L  "
				input1	"0" =
				    SelectOne {
					type	"MFShort"
					index	1
					input	[ 1, 0 ] =
					    USE +40
					    . output

				    }
				    . output

				input2	[  ]
				input3	[  ]
				input4	[  ]
				input5	[  ]
				input6	[  ]
				input7	[  ]
				input8	[  ]
				input9	[  ]
				outputs [ SFString output ]
			    }
			    . output

		    }
		}
		Switch {
		    SoXipText2 {
			fields [ SFString string,  ]
			string	"TRUE" =
			    DEF Export SoDcmSegObject {
				inputs [ SoXipMFDataDicom refInput, MFInt32 origin, SoXipSFDataImage input0,  ]
				refInput	[  ] =
				    USE +5
				    . output

				origin	[ 0, 0, 0 ] =
				    USE Segment+27
				    . roiOrigin

				input0	"NULL" =
				    USE Mask_Axial+25
				    . volMask

				outputs [ SFBool status ]
			    }
			    . status

		    }
		    DEF Metrics_RECIST SoXipText2 {
			fields [ SFString string,  ]
			string	"0" =
			    DEF Vol_Metrics+41 SoVolumeMetrics {
				inputs [ SoXipSFDataImage inputVolume,  ]
				inputVolume	"NULL" =
				    USE Mask_Switch+26
				    . image

				outputs [ SFFloat RECIST, SFFloat WHO, SFFloat Volume ]
			    }
			    . RECIST

		    }
		    DEF Metrics_WHO SoXipText2 {
			fields [ SFString string,  ]
			string	"0" =
			    USE Vol_Metrics+41
			    . WHO

		    }
		    SoXipText2 {
			fields [ SFString string,  ]
			string	"0" =
			    USE +22
			    . output

		    }
		    DEF Metrics_Volume SoXipText2 {
			fields [ SFString string,  ]
			string	"0" =
			    USE Vol_Metrics+41
			    . Volume

		    }
		    DEF Seed_Points SoXipText2 {
			fields [ SFString string,  ]
			string	"0" =
			    DEF +42 SoMap2ImagePt {
				inputs [ SoXipMFDataDicom refInput, MFVec3f coordinates ]
				refInput	[  ] =
				    USE +5
				    . output

				coordinates	[ 0 0 0,
						  0 0 0 ] =
				    USE Seed+28
				    . points

				outputs [ MFInt32 points, SFString sopInstanceUID, SFBool status ]
			    }
			    . points

		    }
		    DEF Seed_UID SoXipText2 {
			fields [ SFString string,  ]
			string	"" =
			    USE +42
			    . sopInstanceUID

		    }
		    DEF UID_Series SoXipText2 {
			fields [ SFString string,  ]
			string	"" =
			    DEF Series_UID SoXipGetDicomString {
				inputs [ SoXipMFDataDicom dicom, SFUShort group, SFUShort element,  ]
				dicom	"NULL" =
				    USE +23
				    . output

				group	0x20
				element	0xe
				outputs [ MFString string ]
			    }
			    . string

		    }
		    DEF RECIST_Points SoXipText2 {
			fields [ SFString string,  ]
			string	"0" =
			    DEF +43 SoMap2ImagePt {
				inputs [ SoXipMFDataDicom refInput, MFVec3f coordinates ]
				refInput	[  ] =
				    USE +5
				    . output

				coordinates	[ 0 0 0,
						  0 0 0 ] =
				    USE RECIST+10
				    . points

				outputs [ MFInt32 points, SFString sopInstanceUID, SFBool status ]
			    }
			    . points

		    }
		    DEF RECIST_UID SoXipText2 {
			fields [ SFString string,  ]
			string	"" =
			    USE +43
			    . sopInstanceUID

		    }
		    DEF WHO_Points SoXipText2 {
			fields [ SFString string,  ]
			string	"0" =
			    DEF +44 SoMap2ImagePt {
				inputs [ SoXipMFDataDicom refInput, MFVec3f coordinates ]
				refInput	[  ] =
				    USE +5
				    . output

				coordinates	[ 0 0 0,
						  0 0 0,
						  0 0 0,
						  0 0 0 ] =
				    USE WHO+11
				    . points

				outputs [ MFInt32 points, SFString sopInstanceUID, SFBool status ]
			    }
			    . points

		    }
		    DEF WHO_UID SoXipText2 {
			fields [ SFString string,  ]
			string	"" =
			    USE +44
			    . sopInstanceUID

		    }
		    DEF Patient_Name SoXipText2 {
			fields [ SFString string,  ]
			string	"" =
			    DEF Name SoXipGetDicomString {
				inputs [ SoXipMFDataDicom dicom, SFUShort group, SFUShort element,  ]
				dicom	"NULL" =
				    USE +23
				    . output

				group	0x10
				element	0x10
				outputs [ MFString string ]
			    }
			    . string

		    }
		    DEF Patient_ID SoXipText2 {
			fields [ SFString string,  ]
			string	"" =
			    DEF PatID SoXipGetDicomString {
				inputs [ SoXipMFDataDicom dicom, SFUShort group, SFUShort element,  ]
				dicom	"NULL" =
				    USE +23
				    . output

				group	0x10
				element	0x20
				outputs [ MFString string ]
			    }
			    . string

		    }
		    DEF Patient_Gender SoXipText2 {
			fields [ SFString string,  ]
			string	"" =
			    DEF Gender SoXipGetDicomString {
				inputs [ SoXipMFDataDicom dicom, SFUShort group, SFUShort element,  ]
				dicom	"NULL" =
				    USE +23
				    . output

				group	0x10
				element	0x40
				outputs [ MFString string ]
			    }
			    . string

		    }
		}
	    }
	    Separator {
		Translation {
		    translation	-0.95 0.85 0
		}
		SoXipText2 {
		    fields [ SFString string,  ]
		    string	"Slice Location: 1" =
			SoXipStringConcatenate {
			    inputs [ SFString separator, MFString input0, MFString input1, MFString input2,
				    MFString input3, MFString input4, MFString input5, MFString input6,
				    MFString input7, MFString input8, MFString input9 ]
			    separator	": "
			    input0	"Slice Location"
			    input1	"1" =
				SelectOne {
				    type	"MFInt32"
				    index	0
				    input	1 =
					USE +2
					. od

				}
				. output

			    input2	[  ]
			    input3	[  ]
			    input4	[  ]
			    input5	[  ]
			    input6	[  ]
			    input7	[  ]
			    input8	[  ]
			    input9	[  ]
			    outputs [ SFString output ]
			}
			. output

		}
		Switch {
		    SoXipText2 {
			fields [ SFString string,  ]
			string	"0" =
			    DEF WHO_inMM Concatenate {
				type	"MFInt32"
				input0	0 =
				    USE +37
				    . oc

			    }
			    . output

		    }
		}
	    }
	}
	Separator {
	    Separator {
		Group {
		    USE +0
		    USE Axial_Plane+7
		    USE +13
		}
		DEF Examiner_Sagittal SoXipMprExaminer {
		    orientation	LEFT
		    border	TRUE
		    dogEar	TRUE
		    orientationCube	TRUE
		    camera			    OrthographicCamera {
			position	0.5 0.5 0.5
			orientation	0.57735 0.57735 0.57735  2.09439
			nearDistance	-0.5
			farDistance	0.5
			focalDistance	0
			height	1
		    }

		    complexity			    Complexity {
			value	0.5
			textureQuality	0.5
		    }

		    intersectionManip			    SoXipMprIntersectionManip {
			fields [ SFBool isManipulating, SFBool on, SFEnum mode,  ]
			isManipulating	FALSE
			on	TRUE
			mode	TRANSLATION
		    }

		    borderNode			    DEF +45 SoXipViewportBorder {
			fields [ SFColor activeColor, SFColor inactiveColor,  ]
			activeColor	0 1 0
			inactiveColor	0 1 0
		    }

		    dogEarNode			    DEF +46 SoXipDogEar {
			fields [  ]
		    }

		    orientationNode			    DEF +47 SoXipOrientationCube {
			fields [  ]
		    }

		    borderSwitch			    Switch {
			whichChild	0
			USE +45
		    }

		    dogEarSwitch			    Switch {
			whichChild	0
			USE +46
		    }

		    orientationSwitch			    Switch {
			whichChild	0
			USE +47
		    }

		}
		USE +18
		SoXipCPUMprRender {
		    fields [ SoXipSFDataImage volume, SFBool blendOn ]
		    volume	"NULL" =
			USE +4
			. output

		    blendOn	TRUE
		}
		SoXipLutColorBar {
		    fields [ SFEnum position, SFVec2f origin, SFVec2f size, SFColor borderColor,
			    SFString bottomLabel, SFString topLabel ]
		    position	LEFT
		    origin	0.02 0.3
		    size	0.03 0.3
		    bottomLabel	"0"
		    topLabel	"4095"
		}
		Group {
		    DEF OverlayStyle_Sagittal SoXipOverlayDrawStyle {
			fields [ MFString label, SFFloat lineWidth,  ]
			label	"roi"
			lineWidth	1
		    }
		    DEF OverlayClr_Sagittal SoXipOverlayColor {
			fields [ MFString label, SFColor color, SFFloat transparency ]
			label	"roi"
			color	0.3 0.8 1
			transparency	0.1
		    }
		    SoMaskContour {
			fields [ MFString shapeLabel, SoXipSFDataImage volMask, SFMatrix refModelMatrix, SFInt32 refWidth,
				SFInt32 refHeight, SFInt32 refDepth, SFEnum orientation, SFMatrix plane,
				MFVec3f concavePoints,  ]
			shapeLabel	"roi"
			volMask	"NULL" =
			    USE Mask_Axial+25
			    . volMask

			refModelMatrix	1 0 0 0
				0 1 0 0
				0 0 1 0
				0 0 0 1 =
			    USE +3
			    . modelMatrix

			refWidth	0 =
			    USE +3
			    . width

			refHeight	0 =
			    USE +3
			    . height

			refDepth	0 =
			    USE +3
			    . depth

			orientation	SAGITTAL
			plane	1.78814e-007 1 8.9407e-008 0
				2.98023e-008 -5.96047e-008 1 0
				1 -1.49012e-007 -1.42109e-014 0
				0.5 0.5 0.5 1 =
			    USE +13
			    . plane

			concavePoints	[  ]
		    }
		}
	    }
	    USE +38
	}
	Separator {
	    Separator {
		Group {
		    USE Axial_Plane+7
		    USE +13
		    USE +0
		}
		DEF Examiner_Coronal SoXipMprExaminer {
		    orientation	ANTERIOR
		    mode	PANZOOM
		    border	TRUE
		    dogEar	TRUE
		    orientationCube	TRUE
		    camera			    OrthographicCamera {
			position	0.5 0.5 0.5
			orientation	1 -4.76607e-008 -1.6369e-009  1.5708
			nearDistance	-0.5
			farDistance	0.5
			focalDistance	0
			height	1
		    }

		    complexity			    Complexity {
			value	0.5
			textureQuality	0.5
		    }

		    intersectionManip			    SoXipMprIntersectionManip {
			fields [ SFBool isManipulating, SFBool on, SFEnum mode,  ]
			isManipulating	FALSE
			on	TRUE
			mode	TRANSLATION
		    }

		    borderNode			    DEF +48 SoXipViewportBorder {
			fields [ SFColor activeColor, SFColor inactiveColor,  ]
			activeColor	0 0 1
			inactiveColor	0 0 1
		    }

		    dogEarNode			    DEF +49 SoXipDogEar {
			fields [  ]
		    }

		    orientationNode			    DEF +50 SoXipOrientationCube {
			fields [  ]
		    }

		    borderSwitch			    Switch {
			whichChild	0
			USE +48
		    }

		    dogEarSwitch			    Switch {
			whichChild	0
			USE +49
		    }

		    orientationSwitch			    Switch {
			whichChild	0
			USE +50
		    }

		}
		USE +18
		SoXipCPUMprRender {
		    fields [ SoXipSFDataImage volume, SFBool blendOn ]
		    volume	"NULL" =
			USE +4
			. output

		    blendOn	TRUE
		}
		SoXipLutColorBar {
		    fields [ SFEnum position, SFVec2f origin, SFVec2f size, SFColor borderColor,
			    SFString bottomLabel, SFString topLabel ]
		    position	LEFT
		    origin	0.02 0.3
		    size	0.03 0.3
		    bottomLabel	"0"
		    topLabel	"4095"
		}
		Group {
		    DEF OverlayStyle_Coronal SoXipOverlayDrawStyle {
			fields [ MFString label, SFFloat lineWidth,  ]
			label	"roi"
			lineWidth	1
		    }
		    DEF OverlayClr_Coronal SoXipOverlayColor {
			fields [ MFString label, SFColor color, SFFloat transparency ]
			label	"roi"
			color	0.3 0.8 1
			transparency	0.1
		    }
		    SoMaskContour {
			fields [ MFString shapeLabel, SoXipSFDataImage volMask, SFMatrix refModelMatrix, SFInt32 refWidth,
				SFInt32 refHeight, SFInt32 refDepth, SFEnum orientation, SFMatrix plane,
				MFVec3f concavePoints,  ]
			shapeLabel	"roi"
			volMask	"NULL" =
			    USE Mask_Axial+25
			    . volMask

			refModelMatrix	1 0 0 0
				0 1 0 0
				0 0 1 0
				0 0 0 1 =
			    USE +3
			    . modelMatrix

			refWidth	0 =
			    USE +3
			    . width

			refHeight	0 =
			    USE +3
			    . height

			refDepth	0 =
			    USE +3
			    . depth

			orientation	CORONAL
			plane	1 -6.50187e-008 2.92721e-008 0
				-2.9272e-008 1.04575e-006 1 0
				-6.50187e-008 -1 1.04575e-006 0
				0.5 0.5 0.5 1 =
			    USE +0
			    . plane

			concavePoints	[  ]
		    }
		}
	    }
	    USE +38
	}
	Separator {
	    USE +39
	    DEF Examiner_VR SoXipExaminer {
		perspective	FALSE
		orientation	ANTERIOR
		mode	ROTATE
		border	TRUE
		rotatePinpoint	TRUE
		viewBoundingBox	1.95 0 0 0
			0 1 0 0
			0 0 1 0
			-0.95 0 0 1
		plane	0.792538 0.609767 -0.0082393  0.320577
		complexity			Complexity {
		    value	0.5
		    textureQuality	0.5
		}

		orthoCamera			DEF +51 OrthographicCamera {
		    viewportMapping	ADJUST_CAMERA
		    position	0.552708 -0.685819 0.577952
		    orientation	-0.999525 -0.0168203 -0.0258329  4.73021
		    aspectRatio	1
		    nearDistance	-0
		    farDistance	2.40884
		    focalDistance	1.20442
		    height	2.40884
		}

		perspectiveCamera			DEF +52 PerspectiveCamera {
		    viewportMapping	ADJUST_CAMERA
		    position	1.02931 -0.145061 0.6609
		    orientation	0.759358 0.490343 0.427714  1.63123
		    aspectRatio	1
		    nearDistance	-0
		    farDistance	2.40884
		    focalDistance	1.20442
		    heightAngle	0.785398
		}

		borderNode			DEF +53 SoXipViewportBorder {
		    fields [ SFColor activeColor, SFColor inactiveColor,  ]
		    activeColor	0.7 0.7 0.7
		    inactiveColor	0.7 0.7 0.7
		}

		cameraSwitch			Switch {
		    whichChild	0
		    USE +51
		    USE +52
		}

		borderSwitch			Switch {
		    whichChild	0
		    USE +53
		}

	    }
	    SoXipOrientationCube {
		fields [  ]
	    }
	    Separator {
		Group {
		    DEF +54 SoXipTextureUnit {
			fields [ SFInt32 textureStage, SFBool autoGenerate ]
			autoGenerate	FALSE
		    }
		    DEF BVol SoXipTexture {
			fields [ SoXipSFDataImage image, SFEnum internalFormat, SFVec3f textureSize,  ]
			image	"NULL" =
			    DEF +55 SoResampleVolume {
				inputs [ SoXipSFDataImage inputVolume, SFInt32 factor_z ]
				inputVolume	"NULL" =
				    USE +4
				    . output

				factor_z	2
				outputs [ SoXipSFDataImage outputVolume ]
			    }
			    . outputVolume

			internalFormat	LUMINANCE16
			textureSize	256 256 59
		    }
		    DEF BLutManip+56 SoXipWindowLevelManip {
			fields [ SFFloat window, SFFloat level, SFEnum mouse,  ]
			window	0.311523
			level	0.373047
			mouse	BUTTON3
		    }
		    DEF +57 SoXipTextureUnit {
			fields [ SFInt32 textureStage, SFBool autoGenerate ]
			textureStage	1
			autoGenerate	FALSE
		    }
		    DEF BLut SoXipLut {
			fields [ SFShort bitsUsed, SFFloat rampWidth, SFFloat rampCenter, SFFloat alphaFactor,
				SFFloat slopeCenter, SFColor colorMiddle, SFColor colorTop, MFColor arrayColor,
				MFFloat arrayAlpha ]
			bitsUsed	8
			rampWidth	0.311523 =
			    USE BLutManip+56
			    . window

			rampCenter	0.373047 =
			    USE BLutManip+56
			    . level

			alphaFactor	0.4
			slopeCenter	0
			colorMiddle	0.8 0.5 0.3
			colorTop	0.6 0.6 0.6
			arrayColor	[  ]
			arrayAlpha	[  ]
		    }
		    SoXipLutTexture {
			fields [ SoSFVec2s textureSize ]
			textureSize	256 1
		    }
		}
		Group {
		    DEF +58 SoXipTextureUnit {
			fields [ SFInt32 textureStage, SFBool autoGenerate ]
			textureStage	2
			autoGenerate	FALSE
		    }
		    DEF PVol SoXipTexture {
			fields [ SoXipSFDataImage image, SFEnum wrapS, SFEnum wrapT, SFEnum wrapR,
				SFEnum internalFormat, SFVec3f textureSize,  ]
			image	"NULL" =
			    USE Mask_Switch+26
			    . image

			wrapS	CLAMP_TO_BORDER
			wrapT	CLAMP_TO_BORDER
			wrapR	CLAMP_TO_BORDER
			internalFormat	LUMINANCE8
			textureSize	0 0 0
		    }
		    DEF +59 SoXipWindowLevelManip {
			fields [ SFFloat window, SFFloat level,  ]
			window	0.433105
			level	0.952637
		    }
		    DEF +60 SoXipTextureUnit {
			fields [ SFInt32 textureStage, SFBool autoGenerate ]
			textureStage	3
			autoGenerate	FALSE
		    }
		    DEF PLut+61 SoXipLut {
			fields [ SFShort bitsUsed, SFFloat rampWidth, SFFloat rampCenter, SFFloat slopeCenter,
				SFColor colorMiddle, MFColor arrayColor, MFFloat arrayAlpha ]
			bitsUsed	8
			rampWidth	0.433105 =
			    USE +59
			    . window

			rampCenter	0.952637 =
			    USE +59
			    . level

			slopeCenter	0
			colorMiddle	1 1 0
			arrayColor	[  ]
			arrayAlpha	[  ]
		    }
		    SoXipLutTexture {
			fields [ SoSFVec2s textureSize ]
			textureSize	256 1
		    }
		}
		SoXipLoadShaders {
		    fields [ SFString fpFilename,  ]
		    fpFilename	"shader\shader_fp.glsl"
		}
		Group {
		    SoXipUniformInt {
			fields [ SFString name, MFInt32 value ]
			name	"vol1"
			value	0 =
			    USE +54
			    . textureStage

		    }
		    SoXipUniformInt {
			fields [ SFString name, MFInt32 value ]
			name	"lut1"
			value	1 =
			    USE +57
			    . textureStage

		    }
		    SoXipUniformInt {
			fields [ SFString name, MFInt32 value ]
			name	"vol2"
			value	2 =
			    USE +58
			    . textureStage

		    }
		    SoXipUniformInt {
			fields [ SFString name, MFInt32 value ]
			name	"lut2"
			value	3 =
			    USE +60
			    . textureStage

		    }
		    SoXipUniformFloat {
			fields [ SFString name, MFFloat value ]
			name	"iso"
			value	0.952637 =
			    USE PLut+61
			    . rampCenter

		    }
		    DEF color SoXipUniformVec4f {
			fields [ SFString name, SFVec4f value ]
			name	"color"
			value	0.1 0.3 0.5 0.5
		    }
		    DEF scale SoXipUniformVec3f {
			fields [ SFString name, SFVec3f value ]
			name	"scale"
			value	1 1 1 =
			    DEF +62 SoROITransform {
				inputs [ SFMatrix volModelMatrix, SFMatrix roiModelMatrix ]
				volModelMatrix	1 0 0 0
					0 1 0 0
					0 0 1 0
					0 0 0 1 =
				    DEF volume SoXipImageAttributes {
					inputs [ SoXipSFDataImage image ]
					image	"NULL" =
					    USE +55
					    . outputVolume

					outputs [ SFMatrix modelMatrix, SFShort width, SFShort height, SFShort depth,
						SFShort bitsStored, SFMatrix defaultOrientation, SFShort orthoScanOrientation, SFMatrix orthoOrientation1,
						SFMatrix orthoOrientation2, SFMatrix orthoOrientation3, SFVec3f defaultCenter ]
				    }
				    . modelMatrix

				roiModelMatrix	1 0 0 0
					0 1 0 0
					0 0 1 0
					0 0 0 1 =
				    DEF roi SoXipImageAttributes {
					inputs [ SoXipSFDataImage image ]
					image	"NULL" =
					    USE Mask_Switch+26
					    . image

					outputs [ SFMatrix modelMatrix, SFShort width, SFShort height, SFShort depth,
						SFShort bitsStored, SFMatrix defaultOrientation, SFShort orthoScanOrientation, SFMatrix orthoOrientation1,
						SFMatrix orthoOrientation2, SFMatrix orthoOrientation3, SFVec3f defaultCenter ]
				    }
				    . modelMatrix

				outputs [ SFVec3f scale, SFVec3f translate ]
			    }
			    . scale

		    }
		    DEF translate SoXipUniformVec3f {
			fields [ SFString name, SFVec3f value ]
			name	"translate"
			value	0 0 0 =
			    USE +62
			    . translate

		    }
		}
		SoXipSlicer {
		    fields [ SFInt32 numSlicesX, SFInt32 numSlicesY, SFInt32 numSlicesZ, SFBool useComplexity,
			     ]
		    numSlicesX	400
		    numSlicesY	100
		    numSlicesZ	100
		    useComplexity	FALSE
		}
	    }
	}
    }
}
